library(rmarkdown)
typeof(4)
typeof(3.141)
typeof("Hello")
.Machine$double.xmin
x <- 2
y <- 6.4
x2 <- x^2
fred <- 2*x+5
wilma <- x+y
a.simple.fraction <- (x+1)/(y+2)
getwd()
setwd("/Users/daffa/Documents/GitHub/DATA202/week2")
getwd()
surf <- read.csv("surf.csv", header=TRUE)
surf[1:10,]
#names of variables
names(surf)
#we can look at the structure of the dataset
str(surf)
head(surf)
#look at the first few rows
head(surf)
#first three rows
surf[1:3,]
#first five rows and first three cols
surf[1:5,1:3]
#accessing cols by name
surf[1:10, c("Gender", "Age", "Income")]
#lets look at the age col - it contains age in years. we can see from the output of str(surf) that it's an int
#we can refer to the age col in 3 ways
surf[,"Age"]
#refer age by its index
surf[,4]
#data frams have one more way to refer to cols - using the $ sign
copyofages <- surf$Age
copyofages[1:5]
str(copyofages)
#the $ notation for referring to cols is very useful
range(surf$Age)
#deleting a column: from the output of str() we can see that there is a col called X that doesn't have any data
surf$X
#deleting a column: from the output of str() we can see that there is a col called X that doesn't have any data
surf$X[1:10]
#check to see that every value is NA
all(is.na(surf$X))
#we can remove a col from a dataset in arous ways, the easiest being to set the col to NULL
names(surf)
surf$X <- NULL
names(surf)
#we can make a brief summary of the characteristics of every col using summary()
summary(surf)
#mean age
mean(surf$Age)
#median age
median(surf$Age)
#the function mode() doesn't find the statistical mode (the most frequent value)
#instead it tells us something about what kind of variable age is
mode(surf$Age)
#to find the statistical mode
names(sort(table(surf$Age), decreasing = TRUE))[1]
#quartiles - get lower quartile, median and upper quartile
quantile(surf$Age, c(0.23, 0.5, 0.75))
#quartiles - get lower quartile, median and upper quartile
quantile(surf$Age, c(0.25, 0.5, 0.75))
#get the 5th percentile and 95th percentile
quantile(surf$Age, c(0.05, 0.95))
#there are two standard graphical displays for continuous data
#boxplot
#histogram
boxplot(surf$Age)
#this uadorned box plot can be improved by specifying a title (main=) and an axis label (ylab=)
#we can also colour the box with (col=)
#recall that the horizontal axis is called the x-axis, and the verytical axis is caleld the y-axis
boxplot(surf$Age, main="Distribution of Age", ylab="Age(years)", col="pink")
head(surf)
boxplot(surf$Income, main="Income Distribution", ylab="Weekly income", col="green")
#histogram
#it counts the number of observations in a number of classes, and plots bars to show these numbers
hist(surf$Age, main="Age Distribution", xlab="Age (years)", col="purple")
#factors
#categorical variables aren't numbers (even if, like stress level, they may be recorded on a numerical scale)
#instead, they have a set of possible values
#we can count the number of values in each of the categoreis using the table() function
table(surf$Ethnicity)
#identify all elements of surf$Ethnicity that are coded "other" and replace them with "Other"
surf$Ethnicity[surf$Ethnicity]
#identify all elements of surf$Ethnicity that are coded "other" and replace them with "Other"
surf$Ethnicity[surf$Ethnicity=="other"]
#identify all elements of surf$Ethnicity that are coded "other" and replace them with "Other"
surf$Ethnicity[surf$Ethnicity=="other"] <- "Other"
table(surf$Ethnicity)
#now we convert ethnicity into a factor, speciying the levels in the order we want
surf$Ethnicity <- factor(surf$Ethnicity,
levels = c("Maori","Pacific","European","Other"))
table(surf$Ethnicity)
#to find the levels that a factor has, use levels()
levels(surf$Ethnicity)
#unlike numerical functions like mean(), table() automatically excludes missing value
#we can see if there are any missing values in the col by asking table() not to exclude anything
table(surf$Ethnicity, exclue=NULL)
#unlike numerical functions like mean(), table() automatically excludes missing value
#we can see if there are any missing values in the col by asking table() not to exclude anything
table(surf$Ethnicity, exclude=NULL)
#now we can convert these totals into percentages
#number of rows in the dataset
n <- nrow(surf)
#counts by ethnic group
tab.eth <- table(surf$Eth)
#counts by ethnic group
tab.eth <- table(surf$Ethicity)
#counts by ethnic group
tab.eth <- table(surf$Ethnicity)
#convert counts to percentages
perc.eth <- 100*tab.eth/n
perc.eth
#a warning about creating factors, make sure you don't make any spelling mistakes
surf$Gender <- factor(surf$Gender, levels=c("male","Female"))
table(surf$Gender)
table(surf$Gender, exclude=NULL)
#the best diagram to show a categorical chart is a bar chart
barplot(table(surf$Ethnicity),
xlab="Ethnic Group", ylab="Frequency",
main="Ethnicity Distribution")
#the best diagram to show a categorical chart is a bar chart
barplot(table(surf$Ethnicity),
xlab="Ethnic Group", ylab="Frequency",
main="Ethnicity Distribution", col="brown")
plot(surf$Age, surf$Income,
xlab="Age (years)", ylab="Weekly Income",
main="Age-Income Distribution")
plot(surf$Age, surf$Income,
xlab="Age (years)", ylab="Weekly Income",
main="Age-Income Distribution", col="red")
plot(surf$Age, surf$Income,
xlab="Age (years)", ylab="Weekly Income",
main="Age-Income Distribution")
#we can change the plotting points by specifying pch= (see ?points for a list of options) and col= for color
plot(surf$Age, surf$Income,
pch=16, col="purple"
xlab="Age (years)", ylab="Weekly Income",
#we can change the plotting points by specifying pch= (see ?points for a list of options) and col= for color
plot(surf$Age, surf$Income,
pch=16, col="purple",
xlab="Age (years)", ylab="Weekly Income",
main="Age-Income Distribution")
